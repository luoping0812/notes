{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Luo's notes \u901a\u8fc7Makedown\u8bb0\u5f55\uff0cMKDocs\u751f\u6210\u7684\u5b66\u4e60\u7b14\u8bb0 Makedown http://xianbai.me/learn-md/article/about/readme.html MKDocs https://www.mkdocs.org/ \u5e38\u7528\u547d\u4ee4 mkdocs new [dir-name] - \u521b\u5efamkdocs\u5de5\u7a0b. mkdocs serve - \u542f\u52a8mkdocs\u670d\u52a1\uff0c\u5730\u5740\uff1a 127.0.0.1:8000 mkdocs build - \u6784\u5efa\u6587\u6863. mkdocs gh-deploy - \u6784\u5efa\uff0c\u5e76\u63d0\u4ea4\u6587\u6863\u5230 github \u7684gh-pages\u5206\u652f. mkdocs gh-deploy --config-file ../notes/mkdocs.yml - \u5728 itsluo.github.io \u4ed3\u5e93\u76ee\u5f55\u4e0b\u6267\u884c\uff0c\u90e8\u7f72\u5230github \u76ee\u5f55\u7ed3\u6784 mkdocs.yml # \u914d\u7f6e\u6587\u4ef6. docs/ index.md # \u4e3b\u9875. ...","title":"\u7b80\u4ecb"},{"location":"#luos-notes","text":"\u901a\u8fc7Makedown\u8bb0\u5f55\uff0cMKDocs\u751f\u6210\u7684\u5b66\u4e60\u7b14\u8bb0","title":"Luo's notes"},{"location":"#makedown","text":"http://xianbai.me/learn-md/article/about/readme.html","title":"Makedown"},{"location":"#mkdocs","text":"https://www.mkdocs.org/","title":"MKDocs"},{"location":"#_1","text":"mkdocs new [dir-name] - \u521b\u5efamkdocs\u5de5\u7a0b. mkdocs serve - \u542f\u52a8mkdocs\u670d\u52a1\uff0c\u5730\u5740\uff1a 127.0.0.1:8000 mkdocs build - \u6784\u5efa\u6587\u6863. mkdocs gh-deploy - \u6784\u5efa\uff0c\u5e76\u63d0\u4ea4\u6587\u6863\u5230 github \u7684gh-pages\u5206\u652f. mkdocs gh-deploy --config-file ../notes/mkdocs.yml - \u5728 itsluo.github.io \u4ed3\u5e93\u76ee\u5f55\u4e0b\u6267\u884c\uff0c\u90e8\u7f72\u5230github","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"#_2","text":"mkdocs.yml # \u914d\u7f6e\u6587\u4ef6. docs/ index.md # \u4e3b\u9875. ...","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"vim-config/","text":"vim-config requirement curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim config \" \u57fa\u672c\u8bbe\u7f6e set number \" \u8bed\u6cd5\u9ad8\u4eae syntax on \" \u4e3b\u9898 colorscheme default \" \u641c\u7d22\u9ad8\u4eae set hlsearch \" tab \u7a7a\u683c\u7684\u957f\u5ea6\uff0c\u9ed8\u8ba48 set tabstop=4 \" \u8868\u793a\u5728\u7f16\u8f91\u6a21\u5f0f\u7684\u65f6\u5019\u6309\u9000\u683c\u952e\u7684\u65f6\u5019\u9000\u56de\u7f29\u8fdb\u7684\u957f\u5ea6\uff0c\u5f53\u4f7f\u7528 expandtab\u65f6\u7279\u522b\u6709\u7528\u3002 set softtabstop=4 \" \u8868\u793a\u6bcf\u4e00\u7ea7\u7f29\u8fdb\u7684\u957f\u5ea6 set shiftwidth=4 \" \u5f53\u8bbe\u7f6e\u6210 expandtab \u65f6\uff0c\u7f29\u8fdb\u7528\u7a7a\u683c\u6765\u8868\u793a\uff0cnoexpandtab \u5219\u662f\u7528\u5236\u8868\u7b26\u8868\u793a\u4e00\u4e2a\u7f29\u8fdb set expandtab let mapleader=',' let g:mapleader=',' inoremap <leader>w <Esc>:w<cr> inoremap jj <Esc> inoremap zz <Esc>:wq<cr> \" \u7a97\u53e3\u5207\u6362 noremap <C-h> <C-w>h noremap <C-j> <C-w>j noremap <C-k> <C-w>k noremap <C-l> <C-w>l \" buffer\u5207\u6362 nnoremap <silent> [b :bprevious<cr> nnoremap <silent> [n :bnext<CR> autocmd BufNewFile *.[ch],*.hpp,*.cpp exec \":call SetTitle()\" func SetComment() call setline(1,\"/********************************************************\") call append(line(\".\"), \"* Copyright (C) \".strftime(\"%Y\").\" All rights reserved.\") call append(line(\".\")+1, \"* \") call append(line(\".\")+2, \"* Filename:\".expand(\"%:t\")) call append(line(\".\")+3, \"* Author :itsluo\") call append(line(\".\")+4, \"* Date :\".strftime(\"%Y-%m-%d\")) call append(line(\".\")+5, \"* Describe:\") call append(line(\".\")+6, \"*\") call append(line(\".\")+7, \"********************************************************/\") endfunc func SetTitle() call SetComment() if expand(\"%:t:r\") == 'main' return endif if expand(\"%:e\") == 'h' call append(line(\".\")+8, \"#ifndef \".toupper(expand(\"%:t:r\")).\"_h\") call append(line(\".\")+9, \"#define \".toupper(expand(\"%:t:r\")).\"_h\") call append(line(\".\")+10,\" \") call append(line(\".\")+11, \"#endif\") call append(line(\".\")+12, \"#endif //\".toupper(expand(\"%:t:r\")).\"_h\") elseif &filetype == 'c'|| &filetype == 'cpp' call append(line(\".\")+8, \"#include \\\"\".expand(\"%:t:r\").\".h\\\"\") endif endfunc call plug#begin('~/.vim/plugged') Plug 'mhinz/vim-startify' Plug 'vim-airline/vim-airline' Plug 'vim-airline/vim-airline-themes' Plug 'scrooloose/nerdtree' Plug 'ctrlpvim/ctrlp.vim' \"Plug 'python-mode/python-mode' if has('nvim') Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' } else Plug 'Shougo/deoplete.nvim' Plug 'roxma/nvim-yarp' Plug 'roxma/vim-hug-neovim-rpc' endif \" Use release branch (recommend) \"Plug 'neoclide/coc.nvim', {'branch': 'release'} Plug 'tpope/vim-commentary' \"Plug 'pechorin/any-jump.vim' Plug 'preservim/tagbar' \"Plug 'universal-ctags/ctags' \"Plug 'sbdchd/neoformat' Plug 'chiel92/vim-autoformat' Plug 'rhysd/vim-clang-format' Plug 'dense-analysis/ale' Plug 'ludovicchabant/vim-gutentags' call plug#end() nnoremap <leader>v :NERDTreeFind<cr> nnoremap <leader>g :NERDTreeToggle<cr> nnoremap <leader>t :TagbarToggle<cr> nnoremap <Leader>f :Autoformat<CR> let g:deoplete#enable_at_startup = 1 let g:clang_format#style_options = { \\ \"AccessModifierOffset\" : -4, \\ \"AllowShortIfStatementsOnASingleLine\" : \"true\", \\ \"AlwaysBreakTemplateDeclarations\" : \"true\", \\ \"Standard\" : \"C++11\"} set tags=./.tags;,.tags \" gutentags \u641c\u7d22\u5de5\u7a0b\u76ee\u5f55\u7684\u6807\u5fd7\uff0c\u78b0\u5230\u8fd9\u4e9b\u6587\u4ef6/\u76ee\u5f55\u540d\u5c31\u505c\u6b62\u5411\u4e0a\u4e00\u7ea7\u76ee\u5f55\u9012\u5f52 let g:gutentags_project_root = ['.root', '.svn', '.git', '.hg', '.project'] \" \u6240\u751f\u6210\u7684\u6570\u636e\u6587\u4ef6\u7684\u540d\u79f0 let g:gutentags_ctags_tagfile = '.tags' \" \u5c06\u81ea\u52a8\u751f\u6210\u7684 tags \u6587\u4ef6\u5168\u90e8\u653e\u5165 ~/.cache/tags \u76ee\u5f55\u4e2d\uff0c\u907f\u514d\u6c61\u67d3\u5de5\u7a0b\u76ee\u5f55 let s:vim_tags = expand('~/.cache/tags') let g:gutentags_cache_dir = s:vim_tags \" \u914d\u7f6e ctags \u7684\u53c2\u6570 let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q'] let g:gutentags_ctags_extra_args += ['--c++-kinds=+px'] let g:gutentags_ctags_extra_args += ['--c-kinds=+px'] \" \u68c0\u6d4b ~/.cache/tags \u4e0d\u5b58\u5728\u5c31\u65b0\u5efa if !isdirectory(s:vim_tags) silent! call mkdir(s:vim_tags, 'p') endif \" map to <Leader>cf in C++ code \"autocmd FileType c,cpp,objc nnoremap <buffer><Leader>cf :<C-u>ClangFormat<CR> \"autocmd FileType c,cpp,objc vnoremap <buffer><Leader>cf :ClangFormat<CR> \" if you install vim-operator-user \"autocmd FileType c,cpp,objc map <buffer><Leader>x <Plug>(operator-clang-format) \" Toggle auto formatting: \"nmap <Leader>C :ClangFormatAutoToggle<CR>","title":"vim-config"},{"location":"vim-config/#vim-config","text":"","title":"vim-config"},{"location":"vim-config/#requirement","text":"curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim","title":"requirement"},{"location":"vim-config/#config","text":"\" \u57fa\u672c\u8bbe\u7f6e set number \" \u8bed\u6cd5\u9ad8\u4eae syntax on \" \u4e3b\u9898 colorscheme default \" \u641c\u7d22\u9ad8\u4eae set hlsearch \" tab \u7a7a\u683c\u7684\u957f\u5ea6\uff0c\u9ed8\u8ba48 set tabstop=4 \" \u8868\u793a\u5728\u7f16\u8f91\u6a21\u5f0f\u7684\u65f6\u5019\u6309\u9000\u683c\u952e\u7684\u65f6\u5019\u9000\u56de\u7f29\u8fdb\u7684\u957f\u5ea6\uff0c\u5f53\u4f7f\u7528 expandtab\u65f6\u7279\u522b\u6709\u7528\u3002 set softtabstop=4 \" \u8868\u793a\u6bcf\u4e00\u7ea7\u7f29\u8fdb\u7684\u957f\u5ea6 set shiftwidth=4 \" \u5f53\u8bbe\u7f6e\u6210 expandtab \u65f6\uff0c\u7f29\u8fdb\u7528\u7a7a\u683c\u6765\u8868\u793a\uff0cnoexpandtab \u5219\u662f\u7528\u5236\u8868\u7b26\u8868\u793a\u4e00\u4e2a\u7f29\u8fdb set expandtab let mapleader=',' let g:mapleader=',' inoremap <leader>w <Esc>:w<cr> inoremap jj <Esc> inoremap zz <Esc>:wq<cr> \" \u7a97\u53e3\u5207\u6362 noremap <C-h> <C-w>h noremap <C-j> <C-w>j noremap <C-k> <C-w>k noremap <C-l> <C-w>l \" buffer\u5207\u6362 nnoremap <silent> [b :bprevious<cr> nnoremap <silent> [n :bnext<CR> autocmd BufNewFile *.[ch],*.hpp,*.cpp exec \":call SetTitle()\" func SetComment() call setline(1,\"/********************************************************\") call append(line(\".\"), \"* Copyright (C) \".strftime(\"%Y\").\" All rights reserved.\") call append(line(\".\")+1, \"* \") call append(line(\".\")+2, \"* Filename:\".expand(\"%:t\")) call append(line(\".\")+3, \"* Author :itsluo\") call append(line(\".\")+4, \"* Date :\".strftime(\"%Y-%m-%d\")) call append(line(\".\")+5, \"* Describe:\") call append(line(\".\")+6, \"*\") call append(line(\".\")+7, \"********************************************************/\") endfunc func SetTitle() call SetComment() if expand(\"%:t:r\") == 'main' return endif if expand(\"%:e\") == 'h' call append(line(\".\")+8, \"#ifndef \".toupper(expand(\"%:t:r\")).\"_h\") call append(line(\".\")+9, \"#define \".toupper(expand(\"%:t:r\")).\"_h\") call append(line(\".\")+10,\" \") call append(line(\".\")+11, \"#endif\") call append(line(\".\")+12, \"#endif //\".toupper(expand(\"%:t:r\")).\"_h\") elseif &filetype == 'c'|| &filetype == 'cpp' call append(line(\".\")+8, \"#include \\\"\".expand(\"%:t:r\").\".h\\\"\") endif endfunc call plug#begin('~/.vim/plugged') Plug 'mhinz/vim-startify' Plug 'vim-airline/vim-airline' Plug 'vim-airline/vim-airline-themes' Plug 'scrooloose/nerdtree' Plug 'ctrlpvim/ctrlp.vim' \"Plug 'python-mode/python-mode' if has('nvim') Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' } else Plug 'Shougo/deoplete.nvim' Plug 'roxma/nvim-yarp' Plug 'roxma/vim-hug-neovim-rpc' endif \" Use release branch (recommend) \"Plug 'neoclide/coc.nvim', {'branch': 'release'} Plug 'tpope/vim-commentary' \"Plug 'pechorin/any-jump.vim' Plug 'preservim/tagbar' \"Plug 'universal-ctags/ctags' \"Plug 'sbdchd/neoformat' Plug 'chiel92/vim-autoformat' Plug 'rhysd/vim-clang-format' Plug 'dense-analysis/ale' Plug 'ludovicchabant/vim-gutentags' call plug#end() nnoremap <leader>v :NERDTreeFind<cr> nnoremap <leader>g :NERDTreeToggle<cr> nnoremap <leader>t :TagbarToggle<cr> nnoremap <Leader>f :Autoformat<CR> let g:deoplete#enable_at_startup = 1 let g:clang_format#style_options = { \\ \"AccessModifierOffset\" : -4, \\ \"AllowShortIfStatementsOnASingleLine\" : \"true\", \\ \"AlwaysBreakTemplateDeclarations\" : \"true\", \\ \"Standard\" : \"C++11\"} set tags=./.tags;,.tags \" gutentags \u641c\u7d22\u5de5\u7a0b\u76ee\u5f55\u7684\u6807\u5fd7\uff0c\u78b0\u5230\u8fd9\u4e9b\u6587\u4ef6/\u76ee\u5f55\u540d\u5c31\u505c\u6b62\u5411\u4e0a\u4e00\u7ea7\u76ee\u5f55\u9012\u5f52 let g:gutentags_project_root = ['.root', '.svn', '.git', '.hg', '.project'] \" \u6240\u751f\u6210\u7684\u6570\u636e\u6587\u4ef6\u7684\u540d\u79f0 let g:gutentags_ctags_tagfile = '.tags' \" \u5c06\u81ea\u52a8\u751f\u6210\u7684 tags \u6587\u4ef6\u5168\u90e8\u653e\u5165 ~/.cache/tags \u76ee\u5f55\u4e2d\uff0c\u907f\u514d\u6c61\u67d3\u5de5\u7a0b\u76ee\u5f55 let s:vim_tags = expand('~/.cache/tags') let g:gutentags_cache_dir = s:vim_tags \" \u914d\u7f6e ctags \u7684\u53c2\u6570 let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q'] let g:gutentags_ctags_extra_args += ['--c++-kinds=+px'] let g:gutentags_ctags_extra_args += ['--c-kinds=+px'] \" \u68c0\u6d4b ~/.cache/tags \u4e0d\u5b58\u5728\u5c31\u65b0\u5efa if !isdirectory(s:vim_tags) silent! call mkdir(s:vim_tags, 'p') endif \" map to <Leader>cf in C++ code \"autocmd FileType c,cpp,objc nnoremap <buffer><Leader>cf :<C-u>ClangFormat<CR> \"autocmd FileType c,cpp,objc vnoremap <buffer><Leader>cf :ClangFormat<CR> \" if you install vim-operator-user \"autocmd FileType c,cpp,objc map <buffer><Leader>x <Plug>(operator-clang-format) \" Toggle auto formatting: \"nmap <Leader>C :ClangFormatAutoToggle<CR>","title":"config"},{"location":"vim/","text":"vim \u57fa\u672c\u64cd\u4f5c \u79fb\u52a8 h, j, k, l `w/W, e/E, b/B - \u5355\u8bcd\u95f4\u79fb\u52a8 f{char}/t{char}/F{char} - \u884c\u5185\u641c\u7d22 0/$ - \u884c\u9996/\u884c\u5c3e\u7b2c\u4e00\u4e2a\u5b57\u7b26 gg/G - \u6587\u4ef6\u5f00\u5934\u7ed3\u5c3e ctrl + u/f - \u7ffb\u9875 zz - \u628a\u5f53\u524d\u884c\u7f6e\u4e3a\u5c4f\u5e55\u4e2d\u95f4 gi - \u6700\u540e\u4e00\u6b21\u7f16\u8f91\u7684\u4f4d\u7f6e \u589e\u5220\u67e5\u6539 a/i/o/A/I/O - \u63d2\u5165 ctrl + h/w/u - \u5220 x/d/dw/dt{char} /,? - \u67e5\u627e n/N r/c/cw - \u6539 :[range]s[ubstitute]/{pattern}/{string}/[flags] - range: \u8303\u56f4\uff0c\u598210\uff0c20\u8868\u793a10-20\u884c\uff0c%\u8868\u793a\u5168\u90e8\uff0cpattern: \u66ff\u6362\u7684\u6a21\u5f0f\uff0cstring: \u66ff\u6362\u540e\u7684\u6587\u672c\uff0cflags: g\u5168\u90e8\u8303\u56f4\u5185\u6267\u884c\uff0cc\u786e\u8ba4\uff0cn\u62a5\u544a\u5339\u914d\u6b21\u6570 \u591a\u6587\u4ef6\u64cd\u4f5c :ls - buffer\u5217\u4e3e\u5f53\u524d\u7f13\u51b2\u533a :b n - \u8df3\u8f6c\u5230\u7b2cn\u4e2a\u7f13\u51b2\u533a :sp, :vs - window ctrl + w + w/h/j/k/l - \u7a97\u53e3\u5207\u6362 ctrl + w + L/H/J/K - \u7a97\u53e3\u79fb\u52a8 :tabnew file - tab gt - \u5207\u6362 \u6587\u672c\u5bf9\u8c61 [number]<command>[text objext] - number: \u6b21\u6570\uff0c command: d(delete)/c(change)/y(yank), text object: \u5355\u8bcdw/\u53e5\u5b50s/\u6bb5\u843dp iw: inner word, \u5982\u679c\u952e\u5165viw\u547d\u4ee4\uff0c\u9996\u5148v\u8fdb\u5165\u9009\u62e9\u6a21\u5f0f\uff0c\u7136\u540eiw\u5c06\u9009\u4e2d\u5f53\u524d\u5355\u8bcd aw: a word, \u4e0d\u4f46\u9009\u4e2d\u5355\u8bcd\uff0c\u4f46\u4f1a\u5305\u542b\u5355\u8bcd\u524d\u540e\u7684\u7a7a\u683c \u590d\u5236\u7c98\u8d34\u4e0e\u5bc4\u5b58\u5668 set paste - set nopaste - \u8865\u5168 ctrl + n/p ctrl + x + f - \u6587\u4ef6 \u914d\u7f6e Linux: ~/.vimrc \u5e38\u7528\u8bbe\u7f6e set no - syntax on - colorscheme default - set hlsearch - \u9ad8\u4eae\u641c\u7d22 \u6620\u5c04 let mapleader=',' - inoremap <leader> <Esc>:w<cr> - inoremap jj <Esc> - inoremap zz <Esc>:wq<cr> - nnoremap <silent> [b :bprevious<cr> - nnoremap <silent> [n :bnext<CR> - noremap <C-h> <C-w>h noremap <C-j> <C-w>j noremap <C-k> <C-w>k noremap <C-l> <C-w>l Vim\u811a\u672c function! IncludeGuard() let basename = expand(\"%:t:r\") let includeGuard = '__' . basename . '_h__' call append(0, \"#ifndef \" . includeGuard) call append(1, \"#define \" . includeGuard) call append(line(\"$\"), \"#endif /* !\" . includeGuard . \" */\") endfunction \u6a21\u5f0f\u6620\u5c04 nmap/vmap/imap nnoremap/vnoremap/inoremap \u63d2\u4ef6 vim-plug \" Specify a directory for plugins \" - For Neovim: stdpath('data') . '/plugged' \" - Avoid using standard Vim directory names like 'plugin' call plug#begin('~/.vim/plugged') Plug 'junegunn/vim-easy-align' \" Initialize plugin system call plug#end()","title":"vim"},{"location":"vim/#vim","text":"","title":"vim"},{"location":"vim/#_1","text":"","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"vim/#_2","text":"h, j, k, l `w/W, e/E, b/B - \u5355\u8bcd\u95f4\u79fb\u52a8 f{char}/t{char}/F{char} - \u884c\u5185\u641c\u7d22 0/$ - \u884c\u9996/\u884c\u5c3e\u7b2c\u4e00\u4e2a\u5b57\u7b26 gg/G - \u6587\u4ef6\u5f00\u5934\u7ed3\u5c3e ctrl + u/f - \u7ffb\u9875 zz - \u628a\u5f53\u524d\u884c\u7f6e\u4e3a\u5c4f\u5e55\u4e2d\u95f4 gi - \u6700\u540e\u4e00\u6b21\u7f16\u8f91\u7684\u4f4d\u7f6e","title":"\u79fb\u52a8"},{"location":"vim/#_3","text":"a/i/o/A/I/O - \u63d2\u5165 ctrl + h/w/u - \u5220 x/d/dw/dt{char} /,? - \u67e5\u627e n/N r/c/cw - \u6539 :[range]s[ubstitute]/{pattern}/{string}/[flags] - range: \u8303\u56f4\uff0c\u598210\uff0c20\u8868\u793a10-20\u884c\uff0c%\u8868\u793a\u5168\u90e8\uff0cpattern: \u66ff\u6362\u7684\u6a21\u5f0f\uff0cstring: \u66ff\u6362\u540e\u7684\u6587\u672c\uff0cflags: g\u5168\u90e8\u8303\u56f4\u5185\u6267\u884c\uff0cc\u786e\u8ba4\uff0cn\u62a5\u544a\u5339\u914d\u6b21\u6570","title":"\u589e\u5220\u67e5\u6539"},{"location":"vim/#_4","text":":ls - buffer\u5217\u4e3e\u5f53\u524d\u7f13\u51b2\u533a :b n - \u8df3\u8f6c\u5230\u7b2cn\u4e2a\u7f13\u51b2\u533a :sp, :vs - window ctrl + w + w/h/j/k/l - \u7a97\u53e3\u5207\u6362 ctrl + w + L/H/J/K - \u7a97\u53e3\u79fb\u52a8 :tabnew file - tab gt - \u5207\u6362","title":"\u591a\u6587\u4ef6\u64cd\u4f5c"},{"location":"vim/#_5","text":"[number]<command>[text objext] - number: \u6b21\u6570\uff0c command: d(delete)/c(change)/y(yank), text object: \u5355\u8bcdw/\u53e5\u5b50s/\u6bb5\u843dp iw: inner word, \u5982\u679c\u952e\u5165viw\u547d\u4ee4\uff0c\u9996\u5148v\u8fdb\u5165\u9009\u62e9\u6a21\u5f0f\uff0c\u7136\u540eiw\u5c06\u9009\u4e2d\u5f53\u524d\u5355\u8bcd aw: a word, \u4e0d\u4f46\u9009\u4e2d\u5355\u8bcd\uff0c\u4f46\u4f1a\u5305\u542b\u5355\u8bcd\u524d\u540e\u7684\u7a7a\u683c","title":"\u6587\u672c\u5bf9\u8c61"},{"location":"vim/#_6","text":"set paste - set nopaste -","title":"\u590d\u5236\u7c98\u8d34\u4e0e\u5bc4\u5b58\u5668"},{"location":"vim/#_7","text":"ctrl + n/p ctrl + x + f - \u6587\u4ef6","title":"\u8865\u5168"},{"location":"vim/#_8","text":"Linux: ~/.vimrc","title":"\u914d\u7f6e"},{"location":"vim/#_9","text":"set no - syntax on - colorscheme default - set hlsearch - \u9ad8\u4eae\u641c\u7d22","title":"\u5e38\u7528\u8bbe\u7f6e"},{"location":"vim/#_10","text":"let mapleader=',' - inoremap <leader> <Esc>:w<cr> - inoremap jj <Esc> - inoremap zz <Esc>:wq<cr> - nnoremap <silent> [b :bprevious<cr> - nnoremap <silent> [n :bnext<CR> - noremap <C-h> <C-w>h noremap <C-j> <C-w>j noremap <C-k> <C-w>k noremap <C-l> <C-w>l","title":"\u6620\u5c04"},{"location":"vim/#vim_1","text":"function! IncludeGuard() let basename = expand(\"%:t:r\") let includeGuard = '__' . basename . '_h__' call append(0, \"#ifndef \" . includeGuard) call append(1, \"#define \" . includeGuard) call append(line(\"$\"), \"#endif /* !\" . includeGuard . \" */\") endfunction","title":"Vim\u811a\u672c"},{"location":"vim/#_11","text":"nmap/vmap/imap nnoremap/vnoremap/inoremap","title":"\u6a21\u5f0f\u6620\u5c04"},{"location":"vim/#_12","text":"","title":"\u63d2\u4ef6"},{"location":"vim/#vim-plug","text":"\" Specify a directory for plugins \" - For Neovim: stdpath('data') . '/plugged' \" - Avoid using standard Vim directory names like 'plugin' call plug#begin('~/.vim/plugged') Plug 'junegunn/vim-easy-align' \" Initialize plugin system call plug#end()","title":"vim-plug"}]}